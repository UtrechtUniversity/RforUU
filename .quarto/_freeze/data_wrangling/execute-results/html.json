{
  "hash": "983e1d7d05afbc6da7c614316598bdc4",
  "result": {
    "markdown": "---\ntitle: \"Tutorial 1: Data wrangling in R\"\nauthor:\n  - name: Benjamin Delory\n    orcid: 0000-0002-1190-8060\n    email: b.m.m.delory@uu.nl\n    affiliations:\n      - name: Environmental sciences group, Copernicus institute of sustainable development, Utrecht University\n---\n\n\n## About this tutorial\n\nWelcome to this tutorial on data wrangling in R!\n\nIn this tutorial, **our goal is to provide you with basic tools for efficiently managing, tidying, and transforming datasets in R.** Whether you are working with ecological data for exploration or analysis, a significant portion of your code will focus on tasks like importing data, organizing variables, computing new ones, and filtering data for statistical analyses and plotting. This tutorial is all about mastering these fundamental skills!\n\nLet's start by getting to know the data we are going to work with a little better...\n\n## Ecological field data used in this tutorial\n\nIn this tutorial, we will import, tidy and transform data collected between 2020 and 2023 as part of a grassland field experiment located in Germany. This section will provide you with more information about the aims and design of this experiment, as well as what has been measured in the field by the researchers who have been actively working on this experiment since 2020. A detailed description of the raw data will come a little bit later.\n\nA detailed description of this experiment is also provided in **Alonso-Crespo IM, Temperton VM, Fichtner A, Niemeyer T, Schloter M, Delory BM**. **2023**. [Exploring priority and year effects on plant diversity, productivity and vertical root distribution: first insights from a grassland field experiment](https://www.biorxiv.org/content/10.1101/2023.11.14.566982v1.full.pdf). *bioRxiv*: 2023.11.14.566982.\n\n### Objectives of the POEM experiment\n\nThe POEM experiment (PriOrity Effect Mechanisms) was set up to study how the year of initiation of an experiment and the order of arrival of species during community assembly affect the structure and functioning of dry grassland plant communities. This knowledge is important because it can help us to better predict the results of restoration efforts (year effects), but also to better understand how manipulating the order of arrival of species can help us to steer the trajectory of plant communities towards desired states (priority effects).\n\n### Design of the POEM experiment\n\nThe researchers set up the same experiment manipulating the order of arrival of species at the same experimental site, but in two consecutive years. This means that one experiment was set up in 2020, while the other was set up in 2021. Both experiments test the same order of arrival scenarios. Therefore, the POEM experiment has two main fixed factors:\n\n**Factor 1**: *The order of arrival of plant species*. This factor has 5 different levels:\n\n-   Synchronous (**S**): all plant species are sown simultaneously\n-   Forbs sown first (**F**): forb species are sown 6 weeks before grasses and legumes\n-   Grasses sown first (**G**): grass species are sown 6 weeks before forbs and legumes\n-   Legumes sown first (**L**): legume species are sown 6 weeks before forbs and grasses\n-   Free succession (**B**): no species are sown in these plots\n\n**Factor 2**: *The year of initiation of an experiment*. This factor has 2 levels:\n\n-   **2020** if the experiment was set up in 2020\n-   **2021** if the experiment was set up in 2021\n\nThe experiment consists of 50 experimental plots, with 5 replicates per factor combination.\n\n![POEM experiment in June 2021 (Niederhaverbeck, Germany). Photo credit: B. Delory.](POEM_experiment.jpg){fig-align=\"left\" width=\"400\"}\n\n## Importing data\n\nThe first thing to do after opening RStudio is to import some data to work with. There are a number of ways to do this depending on the input file format. We will focus on just a few of them here.\n\n### Download the POEM data from Zenodo\n\nThe POEM data that will be used in this tutorial are available on a Zenodo repository.\n\n### Load tidyverse\n\nAll the functions we need for this tutorial are available in R packages from the *tidyverse* collection. You can load *tidyverse* using `library()`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n:::\n\n\n### Import data in R\n\n## Tidying data\n\n## Transforming data\n",
    "supporting": [
      "data_wrangling_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}