geom_sf(data = locations_sf)+
theme_minimal()
scale_fill_gradientn(colors = colors, values = scales::rescale(c(-2, 0, 2)), na.val+
ggplot()+
geom_raster(data = KI1_df , aes(x = x, y = y, fill = KI1))+
geom_raster(data = KI2_df , aes(x = x, y = y, fill = KI2))+
scale_fill_gradientn(colors = colors, values = scales::rescale(c(-2, 0, 2)), na.value = NA) +
geom_sf(data = locations_sf)+
theme_minimal()
ggplot()+
geom_raster(data = KI1_df , aes(x = x, y = y, fill = KI1))+
geom_raster(data = KI2_df , aes(x = x, y = y, fill = KI2))+
scale_fill_gradient2(low = "red", mid = "white", high = "blue", na.value = NA, midpoint = 0) +
geom_sf(data = locations_sf)+
theme_minimal()
View(KI1_df)
View(KI2_df)
ggplot()+
geom_raster(data = KI1_df , aes(x = x, y = y, fill = KI1))+
#geom_raster(data = KI2_df , aes(x = x, y = y, fill = KI2))+
scale_fill_gradient2(low = "red", mid = "white", high = "blue", na.value = NA, midpoint = 0) +
geom_sf(data = locations_sf)+
theme_minimal()
ggplot()+
geom_raster(data = KI1_df , aes(x = x, y = y, fill = KI1))+
#geom_raster(data = KI2_df , aes(x = x, y = y, fill = KI2))+
scale_fill_gradient2(low = "red", mid = "yellow", high = "blue", na.value = NA, midpoint = 0) +
geom_sf(data = locations_sf)+
theme_minimal()
ggplot()+
#geom_raster(data = KI1_df , aes(x = x, y = y, fill = KI1))+
geom_raster(data = KI2_df , aes(x = x, y = y, fill = KI2))+
scale_fill_gradient2(low = "red", mid = "yellow", high = "blue", na.value = NA, midpoint = 0) +
geom_sf(data = locations_sf)+
theme_minimal()
ggplot()+
#geom_raster(data = KI1_df , aes(x = x, y = y, fill = KI1))+
geom_raster(data = KI2_df , aes(x = x, y = y, fill = KI2))+
scale_fill_gradient2(na.value = NA, midpoint = 0) +
geom_sf(data = locations_sf)+
theme_minimal()
ggplot()+
#geom_raster(data = KI1_df , aes(x = x, y = y, fill = KI1))+
geom_raster(data = KI2_df , aes(x = x, y = y, fill = KI2))+
scale_fill_gradientn(colors = colors, values = c(-2, 2), na.value = NA) +
geom_sf(data = locations_sf)+
theme_minimal()
ggplot()+
#geom_raster(data = KI1_df , aes(x = x, y = y, fill = KI1))+
geom_raster(data = KI2_df , aes(x = x, y = y, fill = KI2, na.rm=TRUE))+
#scale_fill_gradientn(colors = colors, values = c(-2, 2), na.value = NA) +
geom_sf(data = locations_sf)+
theme_minimal()
ggplot()+
#geom_raster(data = KI1_df , aes(x = x, y = y, fill = KI1))+
geom_raster(data = KI2_df , aes(x = x, y = y, fill = KI2),na.rm=TRUE)+
#scale_fill_gradientn(colors = colors, values = c(-2, 2), na.value = NA) +
geom_sf(data = locations_sf)+
theme_minimal()
ggplot()+
#geom_raster(data = KI1_df , aes(x = x, y = y, fill = KI1))+
geom_raster(data = KI2_df , aes(x = x, y = y, fill = KI2),na.rm=FALSE)+
#scale_fill_gradientn(colors = colors, values = c(-2, 2), na.value = NA) +
geom_sf(data = locations_sf)+
theme_minimal()
#geom_raster(data = KI1_df , aes(x = x, y = y, fill = KI1))+
geom_raster(data = KI2_df , aes(x = x, y = y, fill = KI2)+
ggplot()+
ggplot()+
#geom_raster(data = KI1_df , aes(x = x, y = y, fill = KI1))+
geom_raster(data = KI2_df , aes(x = x, y = y, fill = KI2))+
scale_fill_gradientn(colors = colors, values = c(-2, 2), na.value = NA) +
geom_sf(data = locations_sf)+
theme_minimal()
GWT<-raster("data/GWT_high.tif")
GWT_df <- as.data.frame(GWT, xy = TRUE)
ggplot()+
#geom_raster(data = KI1_df , aes(x = x, y = y, fill = KI1))+
geom_raster(data = GWT_df , aes(x = x, y = y, fill = KI2))+
scale_fill_gradientn(colors = colors, values = c(-2, 2), na.value = NA) +
geom_sf(data = locations_sf)+
theme_minimal()
ggplot()+
#geom_raster(data = KI1_df , aes(x = x, y = y, fill = KI1))+
geom_raster(data = GWT_df , aes(x = x, y = y, fill = GWT))+
scale_fill_gradientn(colors = colors, values = c(-2, 2), na.value = NA) +
geom_sf(data = locations_sf)+
theme_minimal()
ggplot()+
#geom_raster(data = KI1_df , aes(x = x, y = y, fill = KI1))+
geom_raster(data = GWT_df , aes(x = x, y = y, fill = GWT))+
scale_fill_gradientn(na.value = NA) +
geom_sf(data = locations_sf)+
theme_minimal()
ggplot()+
geom_raster(data = GWT_df , aes(x = x, y = y, fill = GWT))+
geom_sf(data = locations_sf)+
theme_minimal()
View(GWT_df)
ggplot()+
geom_raster(data = GWT_df , aes(x = x, y = y, fill = GWT_high))+
geom_sf(data = locations_sf)+
theme_minimal()
ggplot()+
geom_raster(data = GWT_df , aes(x = x, y = y, fill = GWT_high))+
scale_fill_gradient2(low = "red", high = "blue", mid = "yellow", midpoint = 0, na.value = NA) +
geom_sf(data = locations_sf)+
theme_minimal()
ggplot()+
geom_raster(data = GWT_df , aes(x = x, y = y, fill = GWT_high))+
scale_fill_gradient2(low = "red", high = "blue", mid = "yellow", midpoint = 30, na.value = NA) +
geom_sf(data = locations_sf)+
theme_minimal()
ggplot()+
geom_raster(data = GWT_df , aes(x = x, y = y, fill = GWT_high))+
scale_fill_manual(values = c("yellow", "blue", "darkblue"),
breaks = c(-2, 2),
labels = c("-2 to 2", "Values > 2"),
na.value = "transparent") +
geom_sf(data = locations_sf)+
theme_minimal()
ggplot()+
geom_raster(data = GWT_df , aes(x = x, y = y, fill = GWT_high))+
scale_fill_gradient(low = "yellow", high = "blue",
limits = c(-2, 2),
breaks = c(-2, 2),
labels = c("-2 to 2", "Values > 2"),
na.value = "transparent") +
geom_sf(data = locations_sf)+
theme_minimal()
ggplot()+
geom_raster(data = GWT_df , aes(x = x, y = y, fill = GWT_high))+
scale_fill_gradient(low = "red", high = "blue",
limits = c(-2, 2),
breaks = c(-2, 2),
labels = c("-2", "2"),
na.value = "transparent") +
geom_sf(data = locations_sf)+
theme_minimal()
ggplot()+
geom_raster(data = GWT_df , aes(x = x, y = y, fill = GWT_high))
ggplot()+
geom_raster(data = GWT_df , aes(x = x, y = y, fill = GWT_high))
ggplot()+
geom_raster(data = GWT_df , aes(x = x, y = y, fill = GWT_high))+
scale_fill_gradient(low = "red", high = "blue",
limits = c(-2, 2),
labels = c("-2", "2"),
na.value = "transparent") +
geom_sf(data = locations_sf)+
theme_minimal()
scale_fill_gradient(low = "red", high = "blue",
limits = c(-2, 2),
breaks = c(-2,-1,0,1, 2),
labels = c("-2", "2"),
na.value = "transparent") +
geom_sf(data = locations_sf)+
theme_minimal()
scale_fill_gradient(low = "red", high = "blue",
limits = c(-2, 2),
breaks = c(-2,-1,0,1, 2),
labels = c("-2","-1","0","1", "2"),
na.value = "transparent") +
geom_sf(data = locations_sf)+
theme_minimal()
ggplot()+
geom_raster(data = GWT_df , aes(x = x, y = y, fill = GWT_high))+
scale_fill_gradient(low = "red", high = "blue",
limits = c(-2, 2),
breaks = c(-2,-1,0,1, 2),
labels = c("-2","-1","0","1", "2"),
na.value = "transparent") +
geom_sf(data = locations_sf)+
theme_minimal()
ggplot()+
geom_raster(data = GWT_df , aes(x = x, y = y, fill = GWT_high))+
scale_fill_gradient(low = "red", high = "blue",
limits = c(-2, 2),
breaks = c(-2,-1,0,1, 2),
labels = c("-2","-1","0","1", "2"),
na.value = "transparent") +
scale_fill_continuous(limits = c(-2, 2), na.value = "transparent") +
geom_sf(data = locations_sf)+
theme_minimal()
ggplot()+
geom_raster(data = GWT_df , aes(x = x, y = y, fill = GWT_high))+
scale_fill_continuous(limits = c(-2, 2), na.value = "transparent") +
geom_sf(data = locations_sf)+
theme_minimal()
ggplot()+
geom_raster(data = GWT_df , aes(x = x, y = y, fill = GWT_high))+
scale_fill_continuous(breaks = c(-2,-1,0,1, 2),  na.value = "transparent") +
geom_sf(data = locations_sf)+
theme_minimal()
ggplot()+
geom_raster(data = GWT_df , aes(x = x, y = y, fill = GWT_high))+
scale_fill_gradient(low = "red", high = "blue",
trans = "log",
breaks = c(0.1, 1, 10, 100, 1000),
labels = c("0.1", "1", "10", "100", "1000"),
na.value = "transparent") +
geom_sf(data = locations_sf)+
theme_minimal()
ggplot()+
geom_raster(data = GWT_df , aes(x = x, y = y, fill = GWT_high))+
scale_fill_gradient(low = "red", high = "blue",
trans = "log",
breaks = c(-5, 1, 10, 100),
labels = c("-5", "1", "10", "100"),
na.value = "transparent") +
geom_sf(data = locations_sf)+
theme_minimal()
geom_raster(data = GWT_df , aes(x = x, y = y, fill = GWT_high))+
scale_fill_gradient(low = "red", high = "blue",
trans = "log",
na.value = "transparent") +
geom_sf(data = locations_sf)+
theme_minimal()
ggplot()+
geom_raster(data = GWT_df , aes(x = x, y = y, fill = GWT_high))+
scale_fill_gradient(low = "red", high = "blue",
trans = "log",
na.value = "transparent") +
geom_sf(data = locations_sf)+
theme_minimal()
ggplot()+
geom_raster(data = GWT_df , aes(x = x, y = y, fill = GWT_high))+
scale_fill_gradient(low = "red", high = "blue",
trans = "sqrt",
na.value = "transparent") +
geom_sf(data = locations_sf)+
theme_minimal()
ggplot()+
geom_raster(data = GWT_df , aes(x = x, y = y, fill = GWT_high))+
scale_fill_gradient2(low = "blue", mid = "white", high = "red",
midpoint = 0,
breaks = c(-2, -1, 0, 1, 2),
labels = c("-2", "-1", "0", "1", "2"),
na.value = "transparent") +
geom_sf(data = locations_sf)+
theme_minimal()
ggplot()+
geom_raster(data = GWT_df , aes(x = x, y = y, fill = GWT_high))+
scale_fill_gradient2(low = "blue", mid = "white", high = "red",
midpoint = 30,
breaks = c(-2, -1, 0, 1, 2),
labels = c("-2", "-1", "0", "1", "2"),
na.value = "transparent") +
geom_sf(data = locations_sf)+
theme_minimal()
ggplot()+
geom_raster(data = GWT_df , aes(x = x, y = y, fill = GWT_high))+
scale_fill_gradient2(low = "blue", mid = "white", high = "red",
midpoint = 200,
breaks = c(-2, -1, 0, 1, 2),
labels = c("-2", "-1", "0", "1", "2"),
na.value = "transparent") +
geom_sf(data = locations_sf)+
theme_minimal()
ggplot()+
geom_raster(data = GWT_df , aes(x = x, y = y, fill = GWT_high))+
scale_fill_gradient2(low = "blue", mid = "white", high = "red",
midpoint = 20,
breaks = c(-2, -1, 0, 1, 2),
labels = c("-2", "-1", "0", "1", "2"),
na.value = "transparent") +
geom_sf(data = locations_sf)+
theme_minimal()
ggplot()+
geom_raster(data = GWT_df , aes(x = x, y = y, fill = GWT_high))+
scale_fill_gradient2(low = "blue", mid = "white", high = "red",
midpoint = 10,
breaks = c(-2, -1, 0, 1, 2),
labels = c("-2", "-1", "0", "1", "2"),
na.value = "transparent") +
geom_sf(data = locations_sf)+
theme_minimal()
ggplot()+
geom_raster(data = GWT_df , aes(x = x, y = y, fill = GWT_high))+
scale_fill_gradient2(low = "blue", mid = "white", high = "red",
midpoint = 10,
na.value = "transparent") +
geom_sf(data = locations_sf)+
theme_minimal()
ggplot()+
geom_raster(data = GWT_df , aes(x = x, y = y, fill = GWT_high))+
scale_fill_gradient2(low = "blue", mid = "white", high = "red",
midpoint = 10,
transform = "identity",
na.value = "transparent") +
geom_sf(data = locations_sf)+
theme_minimal()
ggplot()+
geom_raster(data = GWT_df , aes(x = x, y = y, fill = GWT_high))+
scale_fill_gradient2(low = "blue", mid = "white", high = "red",
midpoint = 10,
transform = "asn",
na.value = "transparent") +
geom_sf(data = locations_sf)+
theme_minimal()
ggplot()+
geom_raster(data = GWT_df , aes(x = x, y = y, fill = GWT_high))+
scale_fill_gradient2(low = "blue", mid = "white", high = "red",
midpoint = 10,
transform = "pseudo_log",
na.value = "transparent") +
geom_sf(data = locations_sf)+
theme_minimal()
ggplot()+
geom_raster(data = GWT_df , aes(x = x, y = y, fill = GWT_high))+
scale_fill_gradient2(low = "blue", mid = "white", high = "red",
midpoint = 2,
transform = "pseudo_log",
na.value = "transparent") +
geom_sf(data = locations_sf)+
theme_minimal()
midpoint = 0
ggplot()+
geom_raster(data = GWT_df , aes(x = x, y = y, fill = GWT_high))+
scale_fill_gradient2(low = "blue", mid = "white", high = "red",
midpoint = 0,
transform = "pseudo_log",
na.value = "transparent") +
geom_sf(data = locations_sf)+
theme_minimal()
ggplot()+
geom_raster(data = GWT_df , aes(x = x, y = y, fill = GWT_high))+
scale_fill_gradient2(low = "blue", mid = "white", high = "red",
midpoint = 2,
transform = "pseudo_log",
na.value = "transparent") +
geom_sf(data = locations_sf)+
theme_minimal()
soil_sf <- st_read(dsn = "Data/Soil_OBR.gpkg")
ggplot()+geom_sf(data = soil_sf)+geom_sf(data = locations_sf)+theme_minimal()
View(soil_sf)
soil_sf_transformed <- soil_sf %>%
mutate(V = case_when(
VEREENV %in% c("V", "DV") ~ "Peat",
VEREENV == "S" ~ "Sand",
VEREENV == "M" ~ "Clay",
TRUE ~ NA_character_  # Keep other values as NA
))
# Transform VEREENV variable
soil_sf$VEREENV <- ifelse(soil_sf$VEREENV == "DV", "Peat",
ifelse(soil_sf$VEREENV == "S", "Sand",
ifelse(soil_sf$VEREENV == "M", "Clay", soil_sf$VEREENV)))
# Transform VEREENV variable
soil_sf$VEREENV <- ifelse(soil_sf$VEREENV == "DV", "Peat",
ifelse(soil_sf$VEREENV == "V", "Peat",
ifelse(soil_sf$VEREENV == "M", "Clay",
ifelse(soil_sf$VEREENV == "S", "Sand",soil_sf$VEREENV))))
# Transform VEREENV variable
soil_sf$VEREENV <- ifelse(soil_sf$VEREENV == "DV", "Peat",
ifelse(soil_sf$VEREENV == "V", "Peat",
ifelse(soil_sf$VEREENV == "M", "Clay",
ifelse(soil_sf$VEREENV == "Z", "Sand",soil_sf$VEREENV))))
soil_sf <- st_read(dsn = "Data/Soil_BRO.gpkg")
# Transform VEREENV variable
soil_sf$VEREENV <- ifelse(soil_sf$VEREENV == "DV", "Peat",
ifelse(soil_sf$VEREENV == "V", "Peat",
ifelse(soil_sf$VEREENV == "M", "Clay",
ifelse(soil_sf$VEREENV == "Z", "Sand",soil_sf$VEREENV))))
```{r}
soil_sf <- st_read(dsn = "Data/Soil_BRO.gpkg")
# Transform VEREENV variable
soil_sf$VEREENV <- ifelse(soil_sf$VEREENV == "DV", "Peat",
ifelse(soil_sf$VEREENV == "V", "Peat",
ifelse(soil_sf$VEREENV == "M", "Clay",
ifelse(soil_sf$VEREENV == "Z", "Sand",soil_sf$VEREENV))))
ggplot() +
geom_sf(data = soil_sf, aes(fill = VEREENV)) +
geom_sf(data = locations_sf) +
scale_fill_manual(values = c("Peat" = "brown", "Sand" = "yellow", "Clay" = "gray")) +
theme_minimal()
ggplot() +
geom_sf(data = soil_sf, aes(fill = VEREENV)) +
geom_sf(data = locations_sf) +
scale_fill_manual(values = c("Peat" = "black", "Sand" = "yellow", "Clay" = "brown")) +
theme_minimal()
ggplot() +
geom_sf(data = soil_sf, aes(fill = VEREENV)) +
geom_sf(data = locations_sf) +
scale_fill_manual(values = c("Peat" = "black", "Sand" = "yellow", "Clay" = "brown"),alpha = 0.7) +
theme_minimal()
ggplot() +
geom_sf(data = soil_sf, aes(fill = VEREENV),alpha = 0.7) +
geom_sf(data = locations_sf) +
scale_fill_manual(values = c("Peat" = "black", "Sand" = "yellow", "Clay" = "brown")) +
theme_minimal()
ggplot() +
geom_sf(data = soil_sf, aes(fill = VEREENV),alpha = 0.5) +
geom_sf(data = locations_sf) +
scale_fill_manual(values = c("Peat" = "black", "Sand" = "yellow", "Clay" = "brown")) +
theme_minimal()
ggplot() +
geom_sf(data = soil_sf, aes(fill = VEREENV),alpha = 0.5) +
geom_sf(data = locations_sf) +
scale_fill_manual(values = c("Peat" = "black", "Sand" = "yellow", "Clay" = "brown"),na.value = "white") +
theme_minimal()
ggplot() +
geom_sf(data = soil_sf, aes(fill = VEREENV),alpha = 0.5) +
geom_sf(data = locations_sf) +
scale_fill_manual(values = c("Peat" = "black", "Sand" = "yellow", "Clay" = "brown"),na.value = "lightgrey") +
theme_minimal()
ggplot() +
geom_sf(data = soil_sf, aes(fill = VEREENV),alpha = 0.5) +
geom_sf(data = locations_sf) +
scale_fill_manual(name = "Soil Type",
values = c("Peat" = "black", "Sand" = "yellow", "Clay" = "brown")
,na.value = "lightgrey") +
theme_minimal()
View(locations_sf)
library(mapview)
mapview(soil_sf, zcol = "VEREENV") +
mapview(locations_sf)
mapview(locations_sf)+mapview(soil_sf, zcol = "VEREENV")
mapview(locations_sf)+mapview(soil_sf, zcol = "VEREENV",col.regions = c("brown", "green", "yellow", "gray"))
ggplot() +
geom_sf(data = soil_sf, aes(fill = VEREENV),alpha = 0.5) +
geom_sf(data = locations_sf) +
scale_fill_manual(name = "Soil Type",
values = c("Peat" = "black", "Sand" = "yellow", "Clay" = "brown")
,na.value = "lightgrey") +
theme_minimal()
mapview(locations_sf)+mapview(soil_sf, zcol = "VEREENV",col.regions = c("brown", "lightgrey", "yellow", "gray"), fillOpacity = 0.5)
mapview(locations_sf)+mapview(soil_sf, zcol = "VEREENV",col.regions = c("brown", "lightgrey", "yellow", "gray"), alpha.regions = 0.8,)
mapview(locations_sf)+mapview(soil_sf, zcol = "VEREENV",col.regions = c("brown", "lightgrey", "yellow", "gray"), alpha.regions = 0.8)
mapview(locations_sf)+mapview(soil_sf, zcol = "VEREENV",col.regions = c("brown", "lightgrey", "black", "yellow"), alpha.regions = 0.5)
mapview(locations_sf)+mapview(soil_sf, zcol = "VEREENV",col.regions = c("brown", "lightgrey", "black", "yellow"), alpha.regions = 0.1)
mapview(locations_sf)+mapview(soil_sf, zcol = "VEREENV",col.regions = c("brown", "lightgrey", "black", "yellow"), alpha.regions = 0.1,stroke = FALSE)
mapview(locations_sf)+mapview(soil_sf, zcol = "VEREENV",col.regions = c("brown", "lightgrey", "black", "yellow"), alpha.regions = 0.3,stroke = FALSE, basemap = mapview::basemaps$OpenStreetMap)+
addLegend(at = c(NA, 1:4),  # Set break points for the legend including NA
labels = c("NA", "Peat", "Sand", "Clay"),  # Set labels for each break point
title = "Soil Type",  # Set legend title
na.color = "transparent")  # Set color for NA values
mapview(locations_sf)+mapview(soil_sf, zcol = "VEREENV",col.regions = c("brown", "lightgrey", "black", "yellow"), alpha.regions = 0.3,stroke = FALSE, basemap = OpenStreetMap)+
addLegend(at = c(NA, 1:4),  # Set break points for the legend including NA
labels = c("NA", "Peat", "Sand", "Clay"),  # Set labels for each break point
title = "Soil Type",  # Set legend title
na.color = "transparent")  # Set color for NA values
mapview(locations_sf)+mapview(soil_sf, zcol = "VEREENV",col.regions = c("brown", "lightgrey", "black", "yellow"), alpha.regions = 0.3,stroke = FALSE, basemap = "OpenStreetMap")+
addLegend(at = c(NA, 1:4),  # Set break points for the legend including NA
labels = c("NA", "Peat", "Sand", "Clay"),  # Set labels for each break point
title = "Soil Type",  # Set legend title
na.color = "transparent")  # Set color for NA values
mapview(locations_sf)+mapview(soil_sf, zcol = "VEREENV",col.regions = c("brown", "lightgrey", "black", "yellow"), alpha.regions = 0.3,stroke = FALSE, basemap = "OpenStreetMap")
mapview(locations_sf)+mapview(soil_sf, zcol = "VEREENV",col.regions = c("brown", "lightgrey", "black", "yellow"), alpha.regions = 0.3,stroke = FALSE, map.types = mapviewGetOption("OpenStreetMap"))
mapview(locations_sf)+mapview(soil_sf, zcol = "VEREENV",col.regions = c("brown", "lightgrey", "black", "yellow"), alpha.regions = 0.3,stroke = FALSE, map.types = mapviewGetOption(OpenStreetMap))
mapview(locations_sf)+mapview(soil_sf, zcol = "VEREENV",col.regions = c("brown", "lightgrey", "black", "yellow"), alpha.regions = 0.3,stroke = FALSE, map.types = c("Esri.WorldShadedRelief", "OpenStreetMap.DE"))
library(mapview)
mapview(locations_sf)+mapview(soil_sf, zcol = "VEREENV",col.regions = c("brown", "lightgrey", "black", "yellow"), alpha.regions = 0.3,stroke = FALSE, map.types = c("Esri.WorldShadedRelief", "OpenStreetMap.DE"))
mapview(locations_sf,map.types = c("Esri.WorldShadedRelief", "OpenStreetMap"))+
mapview(soil_sf, zcol = "VEREENV",col.regions = c("brown", "lightgrey", "black", "yellow"), alpha.regions = 0.3,stroke = FALSE, map.types = c("Esri.WorldShadedRelief", "OpenStreetMap"))
mapview(locations_sf,map.types = c("OpenStreetMap"))+
mapview(soil_sf, zcol = "VEREENV",col.regions = c("brown", "lightgrey", "black", "yellow"), alpha.regions = 0.3,stroke = FALSE, map.types = c("OpenStreetMap"))
mapview(GWT<)
mapview(GWT)
##store data as dataframe
#check with benjamin so the functions are similar.
NP_tr <- read.csv("CMTV_Scheifes.csv")
head(NP_tr)
#create ggplot
ggplot(data = NP_tr, mapping = aes(biomass_vascular_plants_g/m2, aveAM))
##store data as dataframe
#check with benjamin so the functions are similar.
NP_tr <- read.csv("CMTV_Scheifes.csv")
##store data as dataframe
#check with benjamin so the functions are similar.
NP_tr <- read.csv("Data/CMTV_Scheifes.csv")
head(NP_tr)
#create ggplot
ggplot(data = NP_tr, mapping = aes(biomass_vascular_plants_g/m2, aveAM))
#create ggplot
ggplot(data = NP_tr, mapping = aes(x=biomass_vascular_plants_g.m2, y=aveAM))
#create ggplot
ggplot(data = NP_tr, mapping = aes(x=biomass_vascular_plants_g.m2, y=aveAM))
##store data as dataframe
#check with benjamin so the functions are similar.
NP_tr <- read.csv("Data/CMTV_Scheifes.csv")
head(NP_tr)
head(NP_tr)
#create ggplot
ggplot(data = NP_tr, mapping = aes(x=biomass_vascular_plants_g.m2, y=aveAM))
#create ggplot
ggplot(data = NP_tr, mapping = aes(x=biomass_vascular_plants_g.m2, y=aveAM))
##store data as dataframe
#check with benjamin so the functions are similar.
NP_tr <- read.csv("Data/CMTV_Scheifes.csv")
head(NP_tr)
#create ggplot
ggplot(data = NP_tr, mapping = aes(x=biomass_vascular_plants_g.m2, y=aveAM))
#create ggplot
ggplot(data = NP_tr, mapping = aes(biomass_vascular_plants_g.m2, aveAM))
#create ggplot
ggplot(data = NP_tr, mapping = aes(biomass_vascular_plants_g.m2, aveAM))+geom_point()
#create ggplot
ggplot(data = NP_tr, mapping = aes(biomass_vascular_plants_g.m2, aveAM))+geom_point()+theme_classic()
#create ggplot
ggplot(data = NP_tr, mapping = aes(log(biomass_vascular_plants_g.m2), aveAM))+geom_point()+theme_classic()
##store data as dataframe
#check with benjamin so the functions are similar.
NP_tr <- read.csv("Data/CMTV_Scheifes.csv")
head(NP_tr)
head(NP_tr)
#create ggplot
ggplot(data = NP_tr, mapping = aes(log(biomass_vascular_plants_g.m2), aveAM))+geom_point()+theme_classic()
#create ggplot
ggplot(data = NP_tr, mapping = aes(log(biomass_vascular_plants_g.m2), as.numeric(aveAM)))+geom_point()+theme_classic()
NP_tr$aveAM<- as.numeric(NP_tr$aveAM)
#create ggplot
ggplot(data = NP_tr, mapping = aes(log(biomass_vascular_plants_g.m2), aveAM))+geom_point()+theme_classic()
